---
- hosts: localhost
  name: Setup ONTAP
  vars_files:
  - var_file.yml
  vars:
    login: &login
      hostname: "{{ cluster_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
  tasks:
  - name: Add licenses
    na_ontap_license:
      state: present
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      #serial_number: #################
      https: true
      validate_certs: false
      license_codes: [Your licenses]
  - name: Assign unowned disks
    na_ontap_disks:
      state: "{{ state }}"
      node: "{{ item }}"
      https: true
      validate_certs: false
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
    with_items:
      - vsim-01
      - vsim-02
  - name: Create Aggrs
    na_ontap_aggregate:
      state: "{{ state }}"
      name: "{{ item.name }}"
      nodes: "{{ item.node }}"
      disk_count: 26
      raid_size: 26
      https: true
      validate_certs: false
      hostname: "{{ hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
    with_items:
      - { name: "aggr1", node: "vsim-01" }
      - { name: "aggr2", node: "vsim-01" }
      - { name: "aggr3", node: "vsim-02" }
      - { name: "aggr4", node: "vsim-02" }
  - name: Create SVM
    na_ontap_svm:
      state: "{{ state }}"
      name: "{{ vserver }}"
      root_volume: "{{ vserver}}_root"
      root_volume_aggregate: "{{ aggr }}"
      root_volume_security_style: unix
      <<: *login 
  - name: Create interface
    na_ontap_interface:
      state: "{{ state }}"
      interface_name: "{{ vserver }}_mgmt_data_1"
      home_port: e0d
      home_node: vsim-01
      role: data
      protocols: nfs
      admin_status: up
      failover_policy: local-only
      firewall_policy: mgmt
      is_auto_revert: true
      address: "{{ address }}"
      netmask: 255.255.255.0
      vserver: "{{ vserver }}"
      <<: *login 
  - name: change nfs status
    na_ontap_nfs:
      state: "{{ state }}"
      service_state: started
      vserver: "{{ vserver }}"
      nfsv3: enabled
      nfsv4: disabled
      nfsv41: disabled
      tcp: enabled
      udp: enabled
      vstorage_state: disabled
      <<: *login 
  - name: Setup default rules
    na_ontap_export_policy_rule:
      state: "{{ state }}"
      policy_name: default
      vserver: "{{ vserver }}"
      client_match: 0.0.0.0/0
      ro_rule: any
      rw_rule: none
      super_user_security: none
      <<: *login 
  - name: Create Policy
    na_ontap_export_policy:
      state: "{{ state }}"
      name: "{{ policy }}"
      vserver: "{{ vserver }}"
      <<: *login 
  - name: Setup rules
    na_ontap_export_policy_rule:
      state: "{{ state }}"
      policy_name: "{{ policy }}"
      vserver: "{{ vserver }}"
      client_match: "{{ client }}"
      ro_rule: sys
      rw_rule: sys
      super_user_security: sys
      <<: *login 
  - name: Create volume
    na_ontap_volume:
      state: "{{ state }}"
      name: "{{ volname }}"
      aggregate_name: "{{ aggr }}"
      size: 1
      size_unit: gb
      policy: "{{ policy }}"
      junction_path: "/{{ volname }}"
      space_guarantee: "none"
      vserver: "{{ vserver }}"
      <<: *login 
- hosts: all
  name: Mount
  vars_files:
  - var_file.yml
  tasks:
  - name: nfs install
    package:
      name: nfs-utils
      state: present
  - name: Mount nfs export
    mount:
      state: mounted
      path: /mnt/tmp
      src: "{{ data_lif }}:/{{ volname}}"
      fstype: nfs
